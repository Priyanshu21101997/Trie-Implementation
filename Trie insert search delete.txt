#include<bits/stdc++.h>
using namespace std;

class TrieNode{
public:
    char data;
    TrieNode** children;
    bool isTerminal;

    TrieNode(char data){
        this->data = data;
        children = new TrieNode*[26];
        for(int i=0;i<26;i++){
            children[i] = NULL;
        }
        isTerminal = false;
    }
};

class Trie{
    TrieNode* root;
public:
    Trie(){
        root = new TrieNode('\0');
    }

    void insert(TrieNode* root,string word){
        if(word.length()==0){
            root->isTerminal = true;
            return;
        }

        int index = word[0]-'a';
        if(root->children[index] == NULL){
            TrieNode* child =new TrieNode(word[0]);
            root->children[index] = child;
            insert(root->children[index],word.substr(1));
        }
        else{
            insert(root->children[index],word.substr(1));
        }
    }

    bool search(TrieNode* root,string word){
        if(word.length() == 0 ){
            if(root->isTerminal == true){
                return true;
            }
            return false;
        }

        int index = word[0]-'a' ;
        if(root->children[index]==NULL){
            return false;
        }

        bool wordFound = search(root->children[index],word.substr(1));
        if(wordFound){
            return true;
        }
        return false;
    }

    void remove(TrieNode* root,string word){
        if(word.length()==0){
            if(root->isTerminal == true){
                root->isTerminal = false;
            }
        }

        int index = word[0] - 'a';
        if(root->children[index]  ==  NULL){
            return;
        }
        else{
            remove(root->children[index],word.substr(1));
        }


    }

public:
    void insert(string word){
        insert(root,word);
    }

    bool search(string word){
        return search(root,word);
    }

    void remove(string word){
        remove(root,word);
    }

};

int main(){
    Trie t;
    t.insert("raghav");
    cout<<t.search("raghav")<<endl;
    t.remove("raghav");
    cout<<t.search("raghav");


}